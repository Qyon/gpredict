# This is a basic workflow to help you get started with Actions

name: Build binaries and release

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
            fetch-depth: 0
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H%M%S')"

      - name: Get git describe version
        id: describe
        run: echo "::set-output name=version::$(git describe)"
        
      - name: Get output_file_name
        id: out_file_name
        run: echo "::set-output name=filename::gpredict-$(git describe|cut -d "-" -f -2|cut -c 2-|tr '-' '.').zip"
         
      - name: Install build tools
        run: sudo apt-get install mingw-w64-tools libtool intltool autoconf automake pkg-config mingw-w64 unzip 
      
      - name: Prepare mingw
        run: sudo mkdir -p /opt/mingw32/ && (cd win32 && sh ./get_msys2_packages.sh)
        
      - name: Build dist packages
        run: (cd win32 && make dist)

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: build-${{ steps.describe.outputs.version }}
          release_name: Build ${{ steps.describe.outputs.version }} ${{ steps.date.outputs.date }}
          draft: false
          prerelease: true
          
      - name: Upload dist package
        id: upload-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: win32/${{ steps.out_file_name.outputs.filename }}
          asset_name: ${{ steps.out_file_name.outputs.filename }}
          asset_content_type: application/octet-stream
          


